[
  {
    "Id": "577992",
    "ThreadId": "249089",
    "Html": "\r\n<p>Hello Guys,</p>\r\n<p>I was trying to create table cell with multi-line text in it. I have noticed that while creating document.xml file, PHPword would strip the new line characters '\\n' from the text.</p>\r\n<p>So, I have modified _writeText function in Word2007/Base.php file and added multi line text support. Changes I made are in bold:</p>\r\n<p>I am not sure if this is a perfect solution but it works for me. I hope someone will find it useful.</p>\r\n<p>&nbsp;</p>\r\n<p>class PHPWord_Writer_Word2007_Base extends PHPWord_Writer_Word2007_WriterPart {<br>\r\n&nbsp;&nbsp;&nbsp; <br>\r\n&nbsp;&nbsp;&nbsp; protected function _writeText(PHPWord_Shared_XMLWriter $objWriter = null, PHPWord_Section_Text $text, $withoutP = false) {<br>\r\n&nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; $styleFont = $text-&gt;getFontStyle();<br>\r\n&nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; <br>\r\n&nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; $SfIsObject = ($styleFont instanceof PHPWord_Style_Font) ? true : false;<br>\r\n&nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; <br>\r\n<strong>&nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; $strText = htmlspecialchars($text-&gt;getText());</strong><br>\r\n<span style=\"color:#008000\"><strong>&nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; // create array of newlines</strong></span><br>\r\n<strong>&nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; $str_tmp=explode(&quot;\\n&quot;,$strText);</strong><br>\r\n<br>\r\n<span style=\"color:#008000\"><strong>&nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; // cycle through the array and create new paragraph per new line</strong></span><br>\r\n<strong>&nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; for ($iii = 0; $iii &lt; count($str_tmp); $iii&#43;&#43;) {</strong><br>\r\n&nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; <br>\r\n<br>\r\n&nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; if(!$withoutP) {<br>\r\n&nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; $objWriter-&gt;startElement('w:p');<br>\r\n&nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; <br>\r\n&nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; $styleParagraph = $text-&gt;getParagraphStyle();<br>\r\n&nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; $SpIsObject = ($styleParagraph instanceof PHPWord_Style_Paragraph) ? true : false;<br>\r\n&nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; <br>\r\n&nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; if($SpIsObject) {<br>\r\n&nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; $this-&gt;_writeParagraphStyle($objWriter, $styleParagraph);<br>\r\n&nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; } elseif(!$SpIsObject &amp;&amp; !is_null($styleParagraph)) {<br>\r\n&nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; $objWriter-&gt;startElement('w:pPr');<br>\r\n&nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; $objWriter-&gt;startElement('w:pStyle');<br>\r\n&nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; $objWriter-&gt;writeAttribute('w:val', $styleParagraph);<br>\r\n&nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; $objWriter-&gt;endElement();<br>\r\n&nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; $objWriter-&gt;endElement();<br>\r\n&nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; }<br>\r\n&nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; }</p>\r\n<p><br>\r\n&nbsp;<strong><span style=\"color:#000000\">&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; $strText = $str_tmp[$iii];&nbsp;&nbsp;&nbsp;\r\n</span></strong></p>\r\n<p><strong><span style=\"color:#000000\">&nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; $strText = PHPWord_Shared_String::ControlCharacterPHP2OOXML($strText);\r\n<span style=\"color:#008080\">// this is where new line characters are striped.</span></span></strong><br>\r\n&nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; <br>\r\n&nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; $objWriter-&gt;startElement('w:r');<br>\r\n&nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; <br>\r\n&nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; if($SfIsObject) {<br>\r\n&nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; $this-&gt;_writeTextStyle($objWriter, $styleFont);<br>\r\n&nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; } elseif(!$SfIsObject &amp;&amp; !is_null($styleFont)) {<br>\r\n&nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; $objWriter-&gt;startElement('w:rPr');<br>\r\n&nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; $objWriter-&gt;startElement('w:rStyle');<br>\r\n&nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; $objWriter-&gt;writeAttribute('w:val', $styleFont);<br>\r\n&nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; $objWriter-&gt;endElement();<br>\r\n&nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; $objWriter-&gt;endElement();<br>\r\n&nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; }<br>\r\n&nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; <br>\r\n&nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; $objWriter-&gt;startElement('w:t');<br>\r\n&nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; $objWriter-&gt;writeAttribute('xml:space', 'preserve'); // needed because of drawing spaces before and after text<br>\r\n&nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; $objWriter-&gt;writeRaw($strText);<br>\r\n<br>\r\n&nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; $objWriter-&gt;endElement();<br>\r\n&nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; <br>\r\n&nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; $objWriter-&gt;endElement(); // w:r<br>\r\n&nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; <br>\r\n&nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; if(!$withoutP) {<br>\r\n&nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; $objWriter-&gt;endElement(); // w:p<br>\r\n&nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; }<br>\r\n&nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; <br>\r\n<strong>&nbsp;&nbsp;&nbsp; } // end of for $iii </strong><br>\r\n&nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; <br>\r\n&nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; <br>\r\n&nbsp;&nbsp;&nbsp; }</p>\r\n<p>&nbsp;</p>\r\n<p>Thanks,</p>\r\n<p>Lenny.</p>\r\n",
    "PostedDate": "2011-03-09T12:33:26.747-08:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  },
  {
    "Id": "693330",
    "ThreadId": "249089",
    "Html": "<p>Dear Lenny</p>\n<p>YOU HAVE NO IDEA HOW HELPFUL THIS IS!!</p>\n<p>For _weeks_ I've been looking for this solution and finally I tracked down this post.</p>\n<p>THANK YOU a million times over - my exporting-visit-activities-to-word application for Clinical Research Nurses now WORKS SEAMLESSLY.</p>\n<p>Am off to celebrate...</p>\n<p>jude</p>",
    "PostedDate": "2011-11-03T07:16:37.993-07:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  },
  {
    "Id": "711645",
    "ThreadId": "249089",
    "Html": "<p>Would you help me to get the same functionality in TextRun?</p>\r\n<p>My goal looks like this (\"MyBoldTitle\" is hardcoded and the text after it comes from an Input-Field.):</p>\r\n<p>\"<strong>MyBoldTitle:</strong>&nbsp;This is a text on the same line with MyBoldTitle and now<br />there is a single line break, not a new paragraph. And now<br />there is another one.<br /><strong>MyBoldTitle2:</strong>&nbsp;This is a text on the same line with MyBoldTitle and now<br />there is a single line break, not a new paragraph. And now<br />there is another one.\"</p>\r\n<p>If I use addText() for title and text seperately I get a linebreak after \"MyBoldTitle:\" too.<br />--&gt; I use the hack above to get the linebreaks inside the text after \"MyBoldTitle:\".</p>\r\n<p>If I use&nbsp;createTextRun() of course I get Title and Text on the same line. Unfortunately it kills all linebreaks in the text.</p>",
    "PostedDate": "2011-12-13T11:41:25.997-08:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  },
  {
    "Id": "1008873",
    "ThreadId": "249089",
    "Html": "I hope this answer fills your needs! I have looked for this for a few hours during development and I couldn't find it.  I had to bet a co-worker 20$ that he couldn't make a new line happen in a cell without editing the actual PHPWord library.  I am now out 20$ and have this code, so I thought I would share to keep the money in your pocket.\r<br />\nHere it is :<br />\n<pre><code>// Create table element\n$table = $section-&gt;addTable($tableStyle);\n\n// Add a row as normal.\n$table-&gt;addRow($rowHeight);\n\n//  The important thing to note here is that you when you create the cell \n// that you want to have the multi-line on, is that you don't add text to it.\n$cell = $table-&gt;addRow($cellWidth, $cellStyle);\n\n// Add as many text to the cell as you want lines.  \n$cell-&gt;addText(&quot;Line 2&quot;, $fontStyle, $paragraphStyle);\n$cell-&gt;addText(&quot;Line 2&quot;, $fontStyle, $paragraphStyle);\n\n/** continue with rest of table declaration */</code></pre>\n\nIn the end you will have an example like sailcomp posted above.\r<br />\n<br />\nGood luck!<br />\n",
    "PostedDate": "2013-03-01T07:35:51.34-08:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  },
  {
    "Id": "1053715",
    "ThreadId": "249089",
    "Html": "basically same solution here:<br />\n<br />\nThis is taking advantage of the fact that -&gt;addText adds a newline.  (which some people don't want anyway, but in this situation, it's used to achieve the desired result)<br />\n<pre><code>  $positionTitleArray = explode(&quot;\\n&quot;, $positionTitle);\n  foreach ($positionTitleArray as $positionLine) {\n    $cell-&gt;addText($positionLine, null, $tableSpace);\n  }</code></pre>\n\n",
    "PostedDate": "2013-06-06T11:33:00.353-07:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  }
]